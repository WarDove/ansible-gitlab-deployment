apiVersion: v1
kind: Namespace
metadata:
  name: ${NAMESPACE}
spec: {}
status: {}
---
apiVersion: v1
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSJnaXRsYWIucmFiaXRhLmF6OjUwNTAiOiB7CgkJCSJhdXRoIjogImRHRnliR0Z1TG1oMWMyVjVibTkyUUhKaFltbDBZUzVoZWpwWFpYTjBjMmxrWlRVNU1nPT0iCgkJfQoJfQp9Cg==
kind: Secret
metadata:
  name: regcred-rabita-gitlab
  namespace: ${NAMESPACE}
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ${CI_PROJECT_NAME}
  name: ${CI_PROJECT_NAME}
  namespace: ${NAMESPACE}
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: ${CI_PROJECT_NAME}
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ${CI_PROJECT_NAME}
  name: ${CI_PROJECT_NAME}
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${CI_PROJECT_NAME}
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ${CI_PROJECT_NAME}
    spec:
      containers:
      - image: ${BUILD_IMAGE}
        imagePullPolicy: Always
        name: ${CI_PROJECT_NAME}
      hostAliases:
      - hostnames:
        - storage.rabita.az
        ip: 10.10.15.48
      - hostnames:
        - webservices.dpc
        - webservices.imei
        - webservices.imei.test
        ip: ${WEBSERVICES_ADDR}
      - hostnames:
        - merchantresult.az
        ip: 10.180.12.43
      - hostnames:
        - mhm.database.global
        ip: 10.10.20.166
      - hostnames:
        - mhm.database.test
        ip: 192.168.11.13
      imagePullSecrets:
      - name: regcred-rabita-gitlab
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app: ${CI_PROJECT_NAME}
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
  name: ${CI_PROJECT_NAME}
  namespace: ${NAMESPACE}
spec:
  ingressClassName: nginx
  rules:
  - host: ${URL}
    http:
      paths:
      - backend:
          service:
            name: ${CI_PROJECT_NAME}
            port:
              number: 80
        path: /
        pathType: Prefix
